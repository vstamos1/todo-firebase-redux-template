{"version":3,"sources":["containers/Todos/InputTodo/InputTodo.js","containers/Todos/Todo/DeleteTodo/DeleteTodo.js","containers/Todos/Todo/Todo.js","containers/Todos/Todos.js"],"names":["ButtonsWrapper","styled","div","MessageWrapper","TodoSchema","Yup","shape","todo","required","min","mapDispatchToProps","addTodo","actions","editTodoAction","connect","todos","loading","error","editTodo","close","opened","loadingText","Modal","Heading","noMargin","size","color","bold","initialValues","validationSchema","onSubmit","values","a","setSubmitting","resetForm","id","isSubmitting","isValid","type","name","placeholder","component","Input","Button","contain","disabled","onClick","Message","show","TodoWrapper","deleteTodo","Wrapper","Controls","editStyles","margin","cursor","deleteStyles","Todo","useState","isDeleting","setisDeleting","isEditing","setIsEditing","className","style","InnerWrapper","Content","compose","firebase","firestore","userId","auth","uid","data","requesting","status","requested","firestoreConnect","props","content","isAdding","setIsAdding","length","slice","reverse","map","key","Loader","isWhite"],"mappings":"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","file":"static/js/3.633b8cb0.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Field } from 'formik';\nimport * as Yup from 'yup';\nimport styled from 'styled-components';\n\nimport Button from '../../../components/UI/Forms/Button/Button';\nimport Heading from '../../../components/UI/Headings/Heading';\nimport Modal from '../../../components/UI/Modal/Modal';\nimport Input from '../../../components/UI/Forms/Input/Input';\nimport Message from '../../../components/UI/Message/Message';\nimport { StyledForm } from '../../../hoc/layout/elements';\n\nimport * as actions from '../../../store/actions';\n\nconst ButtonsWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  margin-bottom: 2rem;\n  justify-content: space-around;\n`;\n\nconst MessageWrapper = styled.div`\n  position: absolute;\n  bottom: 0rem;\n  width: 100%;\n  padding: 0 3rem;\n`;\n\nconst TodoSchema = Yup.object().shape({\n  todo: Yup.string()\n    .required('The todo is required.')\n    .min(4, 'Too short.'),\n});\n\nconst InputTodo = ({\n  editTodo,\n  close,\n  opened,\n  addTodo,\n  loading,\n  error,\n  editTodoAction,\n}) => {\n  const loadingText = editTodo ? 'Editing...' : 'Adding...';\n\n  return (\n    <>\n      <Modal opened={opened} close={close}>\n        <Heading noMargin size=\"h1\" color=\"white\">\n          {editTodo ? 'Edit your todo' : 'Add your new todo'}\n        </Heading>\n        <Heading bold size=\"h4\" color=\"white\">\n          {editTodo\n            ? 'Edit your todo and tap edit'\n            : 'Type your todo and press add'}\n        </Heading>\n        <Formik\n          initialValues={{\n            todo: editTodo ? editTodo.todo : '',\n          }}\n          validationSchema={TodoSchema}\n          onSubmit={async (values, { setSubmitting, resetForm }) => {\n            // send our todo\n            const res = editTodo\n              ? await editTodoAction(editTodo.id, values)\n              : await addTodo(values);\n            if (res) {\n              close();\n            }\n            setSubmitting(false);\n            resetForm();\n          }}\n        >\n          {({ isSubmitting, isValid, resetForm }) => (\n            <StyledForm>\n              <Field\n                type=\"text\"\n                name=\"todo\"\n                placeholder=\"Write your todo...\"\n                component={Input}\n              />\n              <ButtonsWrapper>\n                <Button\n                  contain\n                  color=\"main\"\n                  type=\"submit\"\n                  disabled={!isValid || isSubmitting}\n                  loading={loading ? loadingText : null}\n                >\n                  {editTodo ? 'Edit todo' : 'Add todo'}\n                </Button>\n                <Button\n                  type=\"button\"\n                  color=\"main\"\n                  contain\n                  onClick={() => {\n                    close();\n                    resetForm();\n                  }}\n                >\n                  Cancel\n                </Button>\n              </ButtonsWrapper>\n              <MessageWrapper>\n                <Message error show={error}>\n                  {error}\n                </Message>\n              </MessageWrapper>\n            </StyledForm>\n          )}\n        </Formik>\n      </Modal>\n    </>\n  );\n};\n\nconst mapStateToProps = ({ todos }) => ({\n  loading: todos.loading,\n  error: todos.error,\n});\n\nconst mapDispatchToProps = {\n  addTodo: actions.addTodo,\n  editTodoAction: actions.editTodo,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(InputTodo);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\nimport Modal from '../../../../components/UI/Modal/Modal';\nimport Button from '../../../../components/UI/Forms/Button/Button';\nimport Heading from '../../../../components/UI/Headings/Heading';\nimport Message from '../../../../components/UI/Message/Message';\nimport * as actions from '../../../../store/actions';\n\nconst ButtonsWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  margin-bottom: 2rem;\n  justify-content: space-around;\n`;\n\nconst TodoWrapper = styled.div`\n  margin: 1rem 0rem;\n  font-size: 1.3rem;\n  text-align: center;\n  color: var(--color-white);\n`;\n\nconst MessageWrapper = styled.div`\n  position: absolute;\n  bottom: 2rem;\n  width: 100%;\n  padding: 0 3rem;\n`;\n\nconst DeleteTodo = ({ show, close, todo, deleteTodo, error, loading }) => {\n  return (\n    <Modal opened={show} close={close}>\n      <Heading noMargin size=\"h1\" color=\"white\">\n        Deleting todo\n      </Heading>\n      <Heading bold size=\"h4\" color=\"white\">\n        Are you sure you want to delete this todo?\n      </Heading>\n      <TodoWrapper>{todo.todo}</TodoWrapper>\n      <ButtonsWrapper>\n        <Button\n          contain\n          color=\"red\"\n          onClick={async () => await deleteTodo(todo.id)}\n          disabled={loading}\n          loading={loading ? 'Deleting...' : null}\n        >\n          Delete\n        </Button>\n        <Button color=\"main\" contain onClick={close}>\n          Cancel\n        </Button>\n      </ButtonsWrapper>\n      <MessageWrapper>\n        <Message error show={error}>\n          {error}\n        </Message>\n      </MessageWrapper>\n    </Modal>\n  );\n};\n\nconst mapStateToProps = ({ todos }) => ({\n  error: todos.deleteTodo.error,\n  loading: todos.deleteTodo.loading,\n});\n\nconst mapDispatchToProps = {\n  deleteTodo: actions.deleteTodo,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DeleteTodo);\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport DeleteTodo from './DeleteTodo/DeleteTodo';\nimport InputTodo from '../InputTodo/InputTodo';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  position: relative;\n  padding: 4rem 3rem;\n  background-color: var(--color-mainLighter);\n  box-shadow: 0rem 0.5rem 3.5rem var(--shadow);\n  margin-bottom: 3.5rem;\n  border-radius: 0.5rem;\n  font-size: 1.4rem;\n  font-weight: 700;\n  text-align: center;\n  color: var(--color-white);\n`;\n\nconst Controls = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  display: flex;\n  padding: 1rem;\n  justify-content: center;\n`;\n\nconst editStyles = {\n  color: 'var(--color-main)',\n  margin: '0 .5rem',\n  cursor: 'pointer',\n};\n\nconst deleteStyles = {\n  color: 'var(--color-errorRed)',\n  margin: '0 .5rem',\n  cursor: 'pointer',\n};\n\nconst Todo = ({ todo }) => {\n  const [isDeleting, setisDeleting] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n\n  return (\n    <Wrapper>\n      {todo.todo}\n      <Controls>\n        <i\n          className=\"fas fa-edit\"\n          style={editStyles}\n          onClick={() => setIsEditing(true)}\n        />\n        <i\n          className=\"fas fa-trash-alt\"\n          style={deleteStyles}\n          onClick={() => setisDeleting(true)}\n        />\n        <DeleteTodo\n          todo={todo}\n          show={isDeleting}\n          close={() => setisDeleting(false)}\n        />\n        <InputTodo\n          editTodo={todo}\n          opened={isEditing}\n          close={() => setIsEditing(false)}\n        />\n      </Controls>\n    </Wrapper>\n  );\n};\n\nexport default Todo;\n","import React, { useState } from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { firestoreConnect } from 'react-redux-firebase';\n\nimport Heading from '../../components/UI/Headings/Heading';\nimport { Container } from '../../hoc/layout/elements';\nimport InputTodo from './InputTodo/InputTodo';\nimport Button from '../../components/UI/Forms/Button/Button';\nimport Loader from '../../components/UI/Loader/Loader';\nimport Todo from './Todo/Todo';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  align-self: flex-start;\n  height: 100%;\n  min-height: calc(100vh - 6rem);\n  background-color: var(--color-mainLight);\n`;\n\nconst InnerWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 5rem 4rem;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 60rem;\n  flex-direction: column;\n  margin-top: 2rem;\n`;\n\nconst Todos = ({ todos, requested, userId }) => {\n  const [isAdding, setIsAdding] = useState(false);\n  let content;\n  if (!todos) {\n    content = (\n      <Content>\n        <Loader isWhite />\n      </Content>\n    );\n  } else if (!todos[userId] || !todos[userId].todos) {\n    content = (\n      <Content>\n        <Heading color=\"white\" size=\"h2\">\n          You have no todos!\n        </Heading>\n      </Content>\n    );\n  } else if (todos[userId].todos.length === 0) {\n    content = (\n      <Content>\n        <Heading color=\"white\" size=\"h2\">\n          You have no todos!\n        </Heading>\n      </Content>\n    );\n  } else {\n    content = (\n      <Content>\n        {todos[userId].todos\n          .slice(0)\n          .reverse()\n          .map(todo => (\n            <Todo key={todo.id} todo={todo} />\n          ))}\n      </Content>\n    );\n  }\n\n  return (\n    <Wrapper>\n      <Container>\n        <InnerWrapper>\n          <Heading noMargin size=\"h1\" color=\"white\">\n            Your Todos\n          </Heading>\n          <Heading bold size=\"h4\" color=\"white\">\n            All you have to do for now...\n          </Heading>\n          <Button color=\"main\" contain onClick={() => setIsAdding(true)}>\n            Add Todo\n          </Button>\n          <InputTodo opened={isAdding} close={() => setIsAdding(false)} />\n          {content}\n        </InnerWrapper>\n      </Container>\n    </Wrapper>\n  );\n};\n\nconst mapStateToProps = ({ firebase, firestore }) => ({\n  userId: firebase.auth.uid,\n  todos: firestore.data.todos,\n  requesting: firestore.status.requesting,\n  requested: firestore.status.requested,\n});\n\nconst mapDispatchToProps = {};\n\nexport default compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  ),\n  firestoreConnect(props => [`todos/${props.userId}`])\n)(Todos);\n"],"sourceRoot":""}